repositories {
  jcenter()
}

configurations {
  ktlint
}

dependencies {
  ktlint "com.pinterest:ktlint:0.36.0"
}

task installGitHooks(type: Copy) {
  from new File(rootProject.rootDir, 'hooks')
  into {
    new File(rootProject.rootDir, '.git/hooks')
  }
  fileMode 0755
}

def getChangedFiles() {
  try {
    String changeInfo = 'git status -s'.execute(null, project.rootDir).text.trim()
    println("changeInfo:${changeInfo}")
    return changeInfo == null ? "" : changeInfo
  } catch (Exception e) {
    println e.printStackTrace()
    return ""
  }
}

static def filterByExtension(String status, String extension) {
  ArrayList<String> list = new ArrayList<String>()
  String[] lines = status.split("\\n")
  for (String line : lines) {
    if (line.contains(extension)) {
      String[] items = line.trim().split(" ")
      for (String str : items) {
        if (str.contains(extension)) {
          list.add(str)
        }
      }
    }
  }
  return list
}

task ktlint(type: JavaExec, group: "verification") {
  def list = filterByExtension(getChangedFiles(), ".kt")
  def argsList = new ArrayList<String>()
  for (int i = 0; i < list.size(); i++) {
    String item = list[i]
    String[] items = item.split("/")
    String fileName = items[items.length - 1]

    argsList.add("src/**/" + fileName)
  }

  if (argsList.size() == 0) {
    argsList.add("!src/**/*.kt")
  }

  // Report file rule.
  argsList.add("--reporter=plain")
  argsList.add("--reporter=html,output=${buildDir}/reports/ktlint/ktlint.html")

  description = "Check Kotlin code style."
  classpath = configurations.ktlint
  main = "com.pinterest.ktlint.Main"
  args argsList as String[]
}

task ktlintFormat(type: JavaExec, group: "formatting") {
  def list = filterByExtension(getChangedFiles(), ".kt")
  def argsList = new ArrayList<String>()
  argsList.add("-F")
  for (int i = 0; i < list.size(); i++) {
    String item = list[i]
    String[] items = item.split("/")
    String fileName = items[items.length - 1]

    argsList.add("src/**/" + fileName)
  }

  if (argsList.size() == 0) {
    argsList.add("!src/**/*.kt")
  }
  println("argsList:${argsList}")

  description = "Fix Kotlin code style deviations."
  main = "com.pinterest.ktlint.Main"
  classpath = configurations.ktlint
  args argsList as String[]
}

preBuild.dependsOn installGitHooks
